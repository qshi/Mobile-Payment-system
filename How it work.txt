The software is based on a client-server architecture and UI design. First, open the server, and then the client. The client will show a log in window, you can enter your username and password to log in, or also a valid email address to sign up. When logged in seccuseffuly, you will see the main window, where you can make a payment. When you enter your cardnumber, security number and card holder's name, youcan make a paymet. if you are using this system in a usually logged in IP, the server will only check your card information, otherwise, the server will send you an email that contians a randomly generated confirmation number, you enter the confirmation number and the server check it.If it's OK, your payment will success, else this transaction will be denied.

Futher improvement:
There's some unconvenient with this system. Once you mistakenly enter a wrong information, you have to restart the client software to try again. This should be fixed at the server end.

Extensions: 
1.In this project, we only simulated the SSL protocol, may be we could use a real SSL library, such as OpenSSL.
2.We just implement the customer part, we could do more to implement the merchant part or even a bank server in this system.
3.Maybe we could add more fancy functions, such as it you enter the passwork wrong 3 times, your account will be blocked, and there may be a smart algorithm to save usually used IP.
4. Also, the UI can be designed more beautiful.